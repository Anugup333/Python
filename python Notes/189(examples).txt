#ActiveThreadEx1.py
import threading
print("By default Number of Active Threads=",threading.active_count())
print("Default Name of therad=",threading.current_thread().name)


#CurrentThreadEx1.py
import threading
t=threading.current_thread()
print("Default Name of therad=",t.name)
print("-----------------------OR----------------------")
print("Default Name of therad=",threading.current_thread().name)



#Program for Creating  Sub Thread
#CreateSubThreadsEx1.py
import threading,time
def welcome():
	print("Welcome to Multi Threading--thread name=",threading.current_thread().name)
	time.sleep(2)

def greet(sname):
	print("Hi {}. Good Evening--thread name:{}".format(sname,threading.current_thread().name))
	time.sleep(2)

#Main Program
t1=threading.Thread(target=welcome)
t2=threading.Thread(target=greet,args=("Rossum",) )
print("Execution Status of t1=",t1.is_alive())
print("Execution Status of t2=",t2.is_alive())
#dispatch the sub threads
t1.start()
t2.start()
print("Number of Sub Threads=",threading.active_count())
print("Execution Status of t1=",t1.is_alive())
print("Execution Status of t2=",t2.is_alive())

#Program for Creating  Sub Thread
#JoinSubThreadsEx1.py
import threading,time
def welcome():
	print("\tWelcome to Multi Threading--thread name=",threading.current_thread().name)
	time.sleep(5)
	print("\t{} Came-out off Sleep".format(threading.current_thread().name))

def greet(sname):
	print("Hi {}. Good Evening--thread name:{}".format(sname,threading.current_thread().name))
	time.sleep(5)
	print("\t{} Came-out off Sleep".format(threading.current_thread().name))

#Main Program
print("Program Executed Started: Thread Name:{}".format(threading.current_thread().name))
print("Initially,Number of Sub Threads=",threading.active_count())
#Create 2 Sub Threads
t1=threading.Thread(target=welcome)
t2=threading.Thread(target=greet,args=("Rossum",) )
print("Execution Status of t1 before start=",t1.is_alive())
print("Execution Status of t2 before satrt=",t2.is_alive())
#dispatch the sub threads
t1.start()
t2.start()
print("Number of Sub Threads during sub threads Execution =",threading.active_count())
print("Execution Status of t1 after start=",t1.is_alive())
print("Execution Status of t2 after start=",t2.is_alive())
#Join the Sub threads
t1.join()
t2.join()
print("Number of Sub Threads after joining (completion)=",threading.active_count())
print("Program Executed Ended: Thread Name:{}".format(threading.current_thread().name))


#Program generating 1 to N where N is +Ve after each and every Second
#NumGenFunEx1.py
import threading,time
def generate(n):
	if(n<=0):
		print("{}-->Invalid input:{}".format(threading.current_thread().name,n))
	else:
			for val in range(1,n+1):
				print("\tValue:{}".format(val))
				time.sleep(0.25)
#Main Program
n=int(input("Enter How Many Numbers u want to Generate:"))
t1=threading.Thread(target=generate,args=(n,))
t1.start()

#Program generating 1 to N where N is +Ve after each and every Second
#NumGenOopEx1.py
import threading,time
class Numbers:
	def generate(self,n):
		if(n<=0):
			print("{}-->Invalid input:{}".format(threading.current_thread().name,n))
		else:
				for val in range(1,n+1):
					print("\tValue:{}".format(val))
					time.sleep(0.25)
#Main Program
n=int(input("Enter How Many Numbers u want to Generate:"))
t1=threading.Thread(target=Numbers().generate,args=(n,))
t1.start()

#Program for Creating  Sub Thread
#SetGetSubThreadNamesEx1.py
import threading,time
def welcome():
	print("Welcome to Multi Threading--thread name=",threading.current_thread().name)

def greet(sname):
	print("Hi {}. Good Evening--thread name:{}".format(sname,threading.current_thread().name))

#Main Program
t1=threading.Thread(target=welcome)
t2=threading.Thread(target=greet,args=("Rossum",) )
#print("Default Name of Sub Thread1=",t1.getName())--Not recommended to use
#print("Default Name of Sub Thread2=",t2.getName())--Not recommended to use
print("Default Name of Sub Thread1=",t1.name)
print("Default Name of Sub Thread2=",t2.name)
#Set the Names to Sub Threads
#t1.setName("RS")---Not recommended to use
#t2.setName("TR")---Not recommended to use
t1.name="RS"
t2.name="TR"
print("User-Freindly  Name of Sub Thread1=",t1.name)
print("User-Freindly  of Sub Thread2=",t2.name)


#ThreadFunEx1.py
import threading,time # Step-1
def welcome(sname): # Step-2
	print("Hi:{},Welcome to Multi Threading".format(sname))
#Main Program
t1=threading.Thread(target=welcome,args=("Rossum",)) # Step-3
t1.start() # Step-4

#ThreadOopsEx1.py
import threading,time # Step-1
class Greet:#Step-2
	def welcome(self,sname): # Step-3--Instance Method
		print("Hi:{},Welcome to Multi Threading".format(sname))


#Main Program
go=Greet() # Create create Greet Class for welcome() w.r.t  'go' by the sub thread
t1=threading.Thread(target=go.welcome,args=("Rossum",)) # Step-4
t1.start() # Step-5

#ThreadOopsEx2.py
import threading,time # Step-1
class Greet:#Step-2
	def __init__(self,sname):
		self.sname=sname
	def welcome(self): # Step-3--Instance Method
		print("Hi:{},Welcome to Multi Threading".format(self.sname))


#Main Program
go=Greet("Rossum") # Create create Greet Class for welcome() w.r.t  'go' by the sub thread
t1=threading.Thread(target=go.welcome) # Step-4
t1.start() # Step-5

#ThreadOopsEx3.py
import threading,time # Step-1
class Greet:#Step-2
	def __init__(self,sname):
		self.sname=sname
	def welcome(self): # Step-3--Instance Method
		print("Hi:{},Welcome to Multi Threading".format(self.sname))


#Main Program
t1=threading.Thread(target=Greet("Rossum").welcome) # Step-4
t1.start() # Step-5

#ThreadOopsEx4.py
import threading,time # Step-1
class Greet:#Step-2
	def __init__(self,sname):
		self.sname=sname
	def welcome(self): # Step-3--Instance Method
		print("Hi:{},Welcome to Multi Threading".format(self.sname))


#Main Program
threading.Thread(target=Greet("Rossum").welcome) .start() # step4-& Step-5

#ThreadOopsEx5.py
import threading,time
class Sample1:
	def welcome(self):
		print("\tWelcome to Multi Threading--thread name=",threading.current_thread().name)
		time.sleep(5)
		print("\t{} Came-out off Sleep".format(threading.current_thread().name))
class Sample2:
	def greet(self,sname):
		print("Hi {}. Good Evening--thread name:{}".format(sname,threading.current_thread().name))
		time.sleep(5)
		print("\t{} Came-out off Sleep".format(threading.current_thread().name))
#Main Program
t1=threading.Thread(target=Sample1().welcome)
t2=threading.Thread(target=Sample2().greet,args=("Rossum",))
t1.start()
t2.start()